---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: scopedtokens.security.artifactory.jfrog.m.crossplane.io
spec:
  group: security.artifactory.jfrog.m.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - artifactory
    kind: ScopedToken
    listKind: ScopedTokenList
    plural: scopedtokens
    singular: scopedtoken
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScopedToken is the Schema for the ScopedTokens API. ""
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScopedTokenSpec defines the desired state of ScopedToken
            properties:
              forProvider:
                properties:
                  audiences:
                    description: |-
                      IDs. Limited to total 255 characters. Default to '@' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this documentation
                      A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this [documentation](https://jfrog.com/help/r/jfrog-rest-apis/get-service-id)
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: |-
                      (String) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                      Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                    type: string
                  expiresIn:
                    description: |-
                      negative. Default value is based on configuration in 'access.config.yaml'. See API documentation for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See official documentation for details.
                      The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in 'access.config.yaml'. See [API documentation](https://jfrog.com/help/r/jfrog-rest-apis/revoke-token-by-id) for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See [official documentation](https://jfrog.com/help/r/jfrog-platform-administration-documentation/persistency-threshold) for details.
                    type: number
                  grantType:
                    description: |-
                      (String) The grant type used to authenticate the request. In this case, the only value supported is client_credentials which is also the default value if this parameter is not specified.
                      The grant type used to authenticate the request. In this case, the only value supported is `client_credentials` which is also the default value if this parameter is not specified.
                    type: string
                  ignoreMissingTokenWarning:
                    description: |-
                      (Boolean) Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is false.
                      Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is `false`.
                    type: boolean
                  includeReferenceToken:
                    description: |-
                      (Boolean) Also create a reference token which can be used like an API key. Default is false.
                      Also create a reference token which can be used like an API key. Default is `false`.
                    type: boolean
                  projectKey:
                    description: |-
                      (String) The project for which this token is created. Enter the project name on which you want to apply this token.
                      The project for which this token is created. Enter the project name on which you want to apply this token.
                    type: string
                  refreshable:
                    description: |-
                      (Boolean) Is this token refreshable? Default is false.
                      Is this token refreshable? Default is `false`.
                    type: boolean
                  scopes:
                    description: |-
                      admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      - `applied-permissions/user` - provides user access. If left at the default setting, the token will be created with the user-identity scope, which allows users to identify themselves in the Platform but does not grant any specific access permissions.
                      - `applied-permissions/admin` - the scope assigned to admin users.
                      - `applied-permissions/groups` - this scope assigns permissions to groups using the following format: `applied-permissions/groups:<group-name>[,<group-name>...]`
                      - Resource Permissions: From Artifactory 7.38.x, resource permissions scoped tokens are also supported in the REST API. A permission can be represented as a scope token string in the following format: `<resource-type>:<target>[/<sub-resource>]:<actions>`
                      - Where:
                      - `<resource-type>` - one of the permission resource types, from a predefined closed list. Currently, the only resource type that is supported is the artifact resource type.
                      - `<target>` - the target resource, can be exact name or a pattern
                      - `<sub-resource>` - optional, the target sub-resource, can be exact name or a pattern
                      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["applied-permissions/user", "artifact:generic-local:r"]`
                      - `["applied-permissions/group", "artifact:generic-local/path:*"]`
                      - `["applied-permissions/admin", "system:metrics:r", "artifact:generic-local:*"]`
                      - `applied-permissions/roles:project-key` - provides access to elements associated with the project based on the project role. For example, `applied-permissions/roles:project-type:developer,qa`.

                      - System Permissions: Used to grant access to system resources. A permission can be represented as a scope token string in the following format: `system:(metrics|livelogs|identities|permissions):<actions>`
                      - Where:
                      - `metrics|livelogs|identities|permissions` - one of these options can be chosen      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["system:livelogs:r", "system:metrics:r,w,d"]`
                      ->The scope to assign to the token should be provided as a list of scope tokens, limited to 500 characters in total.
                      From Artifactory 7.84.3, [project admins](https://jfrog.com/help/r/jfrog-platform-administration-documentation/access-token-creation-by-project-admins) can create access tokens that are tied to the projects in which they hold administrative privileges.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  username:
                    description: |-
                      either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: /users/. Limited to 255 characters.
                      The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: <service-id>/users/<username>. Limited to 255 characters.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  audiences:
                    description: |-
                      IDs. Limited to total 255 characters. Default to '@' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this documentation
                      A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this [documentation](https://jfrog.com/help/r/jfrog-rest-apis/get-service-id)
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: |-
                      (String) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                      Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                    type: string
                  expiresIn:
                    description: |-
                      negative. Default value is based on configuration in 'access.config.yaml'. See API documentation for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See official documentation for details.
                      The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in 'access.config.yaml'. See [API documentation](https://jfrog.com/help/r/jfrog-rest-apis/revoke-token-by-id) for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See [official documentation](https://jfrog.com/help/r/jfrog-platform-administration-documentation/persistency-threshold) for details.
                    type: number
                  grantType:
                    description: |-
                      (String) The grant type used to authenticate the request. In this case, the only value supported is client_credentials which is also the default value if this parameter is not specified.
                      The grant type used to authenticate the request. In this case, the only value supported is `client_credentials` which is also the default value if this parameter is not specified.
                    type: string
                  ignoreMissingTokenWarning:
                    description: |-
                      (Boolean) Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is false.
                      Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is `false`.
                    type: boolean
                  includeReferenceToken:
                    description: |-
                      (Boolean) Also create a reference token which can be used like an API key. Default is false.
                      Also create a reference token which can be used like an API key. Default is `false`.
                    type: boolean
                  projectKey:
                    description: |-
                      (String) The project for which this token is created. Enter the project name on which you want to apply this token.
                      The project for which this token is created. Enter the project name on which you want to apply this token.
                    type: string
                  refreshable:
                    description: |-
                      (Boolean) Is this token refreshable? Default is false.
                      Is this token refreshable? Default is `false`.
                    type: boolean
                  scopes:
                    description: |-
                      admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      - `applied-permissions/user` - provides user access. If left at the default setting, the token will be created with the user-identity scope, which allows users to identify themselves in the Platform but does not grant any specific access permissions.
                      - `applied-permissions/admin` - the scope assigned to admin users.
                      - `applied-permissions/groups` - this scope assigns permissions to groups using the following format: `applied-permissions/groups:<group-name>[,<group-name>...]`
                      - Resource Permissions: From Artifactory 7.38.x, resource permissions scoped tokens are also supported in the REST API. A permission can be represented as a scope token string in the following format: `<resource-type>:<target>[/<sub-resource>]:<actions>`
                      - Where:
                      - `<resource-type>` - one of the permission resource types, from a predefined closed list. Currently, the only resource type that is supported is the artifact resource type.
                      - `<target>` - the target resource, can be exact name or a pattern
                      - `<sub-resource>` - optional, the target sub-resource, can be exact name or a pattern
                      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["applied-permissions/user", "artifact:generic-local:r"]`
                      - `["applied-permissions/group", "artifact:generic-local/path:*"]`
                      - `["applied-permissions/admin", "system:metrics:r", "artifact:generic-local:*"]`
                      - `applied-permissions/roles:project-key` - provides access to elements associated with the project based on the project role. For example, `applied-permissions/roles:project-type:developer,qa`.

                      - System Permissions: Used to grant access to system resources. A permission can be represented as a scope token string in the following format: `system:(metrics|livelogs|identities|permissions):<actions>`
                      - Where:
                      - `metrics|livelogs|identities|permissions` - one of these options can be chosen      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["system:livelogs:r", "system:metrics:r,w,d"]`
                      ->The scope to assign to the token should be provided as a list of scope tokens, limited to 500 characters in total.
                      From Artifactory 7.84.3, [project admins](https://jfrog.com/help/r/jfrog-platform-administration-documentation/access-token-creation-by-project-admins) can create access tokens that are tied to the projects in which they hold administrative privileges.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  username:
                    description: |-
                      either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: /users/. Limited to 255 characters.
                      The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: <service-id>/users/<username>. Limited to 255 characters.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ScopedTokenStatus defines the observed state of ScopedToken.
            properties:
              atProvider:
                properties:
                  audiences:
                    description: |-
                      IDs. Limited to total 255 characters. Default to '@' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this documentation
                      A list of the other instances or services that should accept this token identified by their Service-IDs. Limited to total 255 characters. Default to '*@*' if not set. Service ID must begin with valid JFrog service type. Options: jfrt, jfxr, jfpip, jfds, jfmc, jfac, jfevt, jfmd, jfcon, or *. For instructions to retrieve the Artifactory Service ID see this [documentation](https://jfrog.com/help/r/jfrog-rest-apis/get-service-id)
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  description:
                    description: |-
                      (String) Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                      Free text token description. Useful for filtering and managing tokens. Limited to 1024 characters.
                    type: string
                  expiresIn:
                    description: |-
                      negative. Default value is based on configuration in 'access.config.yaml'. See API documentation for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See official documentation for details.
                      The amount of time, in seconds, it would take for the token to expire. An admin shall be able to set whether expiry is mandatory, what is the default expiry, and what is the maximum expiry allowed. Must be non-negative. Default value is based on configuration in 'access.config.yaml'. See [API documentation](https://jfrog.com/help/r/jfrog-rest-apis/revoke-token-by-id) for details. Access Token would not be saved by Artifactory if this is less than the persistence threshold value (default to 10800 seconds) set in Access configuration. See [official documentation](https://jfrog.com/help/r/jfrog-platform-administration-documentation/persistency-threshold) for details.
                    type: number
                  expiry:
                    description: |-
                      (Number) Returns the token expiry.
                      Returns the token expiry.
                    type: number
                  grantType:
                    description: |-
                      (String) The grant type used to authenticate the request. In this case, the only value supported is client_credentials which is also the default value if this parameter is not specified.
                      The grant type used to authenticate the request. In this case, the only value supported is `client_credentials` which is also the default value if this parameter is not specified.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  ignoreMissingTokenWarning:
                    description: |-
                      (Boolean) Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is false.
                      Toggle to ignore warning message when token was missing or not created and stored by Artifactory. Default is `false`.
                    type: boolean
                  includeReferenceToken:
                    description: |-
                      (Boolean) Also create a reference token which can be used like an API key. Default is false.
                      Also create a reference token which can be used like an API key. Default is `false`.
                    type: boolean
                  issuedAt:
                    description: |-
                      (Number) Returns the token issued at date/time.
                      Returns the token issued at date/time.
                    type: number
                  issuer:
                    description: |-
                      (String) Returns the token issuer.
                      Returns the token issuer.
                    type: string
                  projectKey:
                    description: |-
                      (String) The project for which this token is created. Enter the project name on which you want to apply this token.
                      The project for which this token is created. Enter the project name on which you want to apply this token.
                    type: string
                  refreshable:
                    description: |-
                      (Boolean) Is this token refreshable? Default is false.
                      Is this token refreshable? Default is `false`.
                    type: boolean
                  scopes:
                    description: |-
                      admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      The scope of access that the token provides. Access to the REST API is always provided by default. Administrators can set any scope, while non-admin users can only set the scope to a subset of the groups to which they belong. The supported scopes include:
                      - `applied-permissions/user` - provides user access. If left at the default setting, the token will be created with the user-identity scope, which allows users to identify themselves in the Platform but does not grant any specific access permissions.
                      - `applied-permissions/admin` - the scope assigned to admin users.
                      - `applied-permissions/groups` - this scope assigns permissions to groups using the following format: `applied-permissions/groups:<group-name>[,<group-name>...]`
                      - Resource Permissions: From Artifactory 7.38.x, resource permissions scoped tokens are also supported in the REST API. A permission can be represented as a scope token string in the following format: `<resource-type>:<target>[/<sub-resource>]:<actions>`
                      - Where:
                      - `<resource-type>` - one of the permission resource types, from a predefined closed list. Currently, the only resource type that is supported is the artifact resource type.
                      - `<target>` - the target resource, can be exact name or a pattern
                      - `<sub-resource>` - optional, the target sub-resource, can be exact name or a pattern
                      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["applied-permissions/user", "artifact:generic-local:r"]`
                      - `["applied-permissions/group", "artifact:generic-local/path:*"]`
                      - `["applied-permissions/admin", "system:metrics:r", "artifact:generic-local:*"]`
                      - `applied-permissions/roles:project-key` - provides access to elements associated with the project based on the project role. For example, `applied-permissions/roles:project-type:developer,qa`.

                      - System Permissions: Used to grant access to system resources. A permission can be represented as a scope token string in the following format: `system:(metrics|livelogs|identities|permissions):<actions>`
                      - Where:
                      - `metrics|livelogs|identities|permissions` - one of these options can be chosen      - `<actions>` - comma-separated list of action acronyms. The actions allowed are `r`, `w`, `d`, `a`, `m`, `x`, `s`, or any combination of these actions. To allow all actions - use `*`
                      - Examples:
                      - `["system:livelogs:r", "system:metrics:r,w,d"]`
                      ->The scope to assign to the token should be provided as a list of scope tokens, limited to 500 characters in total.
                      From Artifactory 7.84.3, [project admins](https://jfrog.com/help/r/jfrog-platform-administration-documentation/access-token-creation-by-project-admins) can create access tokens that are tied to the projects in which they hold administrative privileges.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  subject:
                    description: |-
                      (String) Returns the token type.
                      Returns the token type.
                    type: string
                  tokenType:
                    description: |-
                      (String) Returns the token type.
                      Returns the token type.
                    type: string
                  username:
                    description: |-
                      either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: /users/. Limited to 255 characters.
                      The user name for which this token is created. The username is based on the authenticated user - either from the user of the authenticated token or based on the username (if basic auth was used). The username is then used to set the subject of the token: <service-id>/users/<username>. Limited to 255 characters.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
