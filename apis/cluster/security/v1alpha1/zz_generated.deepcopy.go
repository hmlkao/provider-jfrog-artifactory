//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Keypair) DeepCopyInto(out *Keypair) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Keypair.
func (in *Keypair) DeepCopy() *Keypair {
	if in == nil {
		return nil
	}
	out := new(Keypair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Keypair) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairInitParameters) DeepCopyInto(out *KeypairInitParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.PairType != nil {
		in, out := &in.PairType, &out.PairType
		*out = new(string)
		**out = **in
	}
	if in.PassphraseSecretRef != nil {
		in, out := &in.PassphraseSecretRef, &out.PassphraseSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairInitParameters.
func (in *KeypairInitParameters) DeepCopy() *KeypairInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeypairInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairList) DeepCopyInto(out *KeypairList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Keypair, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairList.
func (in *KeypairList) DeepCopy() *KeypairList {
	if in == nil {
		return nil
	}
	out := new(KeypairList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeypairList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairObservation) DeepCopyInto(out *KeypairObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PairType != nil {
		in, out := &in.PairType, &out.PairType
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairObservation.
func (in *KeypairObservation) DeepCopy() *KeypairObservation {
	if in == nil {
		return nil
	}
	out := new(KeypairObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairParameters) DeepCopyInto(out *KeypairParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = new(string)
		**out = **in
	}
	if in.PairType != nil {
		in, out := &in.PairType, &out.PairType
		*out = new(string)
		**out = **in
	}
	if in.PassphraseSecretRef != nil {
		in, out := &in.PassphraseSecretRef, &out.PassphraseSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	in.PrivateKeySecretRef.DeepCopyInto(&out.PrivateKeySecretRef)
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairParameters.
func (in *KeypairParameters) DeepCopy() *KeypairParameters {
	if in == nil {
		return nil
	}
	out := new(KeypairParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairSpec) DeepCopyInto(out *KeypairSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairSpec.
func (in *KeypairSpec) DeepCopy() *KeypairSpec {
	if in == nil {
		return nil
	}
	out := new(KeypairSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeypairStatus) DeepCopyInto(out *KeypairStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeypairStatus.
func (in *KeypairStatus) DeepCopy() *KeypairStatus {
	if in == nil {
		return nil
	}
	out := new(KeypairStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedToken) DeepCopyInto(out *ScopedToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedToken.
func (in *ScopedToken) DeepCopy() *ScopedToken {
	if in == nil {
		return nil
	}
	out := new(ScopedToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScopedToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenInitParameters) DeepCopyInto(out *ScopedTokenInitParameters) {
	*out = *in
	if in.Audiences != nil {
		in, out := &in.Audiences, &out.Audiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpiresIn != nil {
		in, out := &in.ExpiresIn, &out.ExpiresIn
		*out = new(float64)
		**out = **in
	}
	if in.GrantType != nil {
		in, out := &in.GrantType, &out.GrantType
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingTokenWarning != nil {
		in, out := &in.IgnoreMissingTokenWarning, &out.IgnoreMissingTokenWarning
		*out = new(bool)
		**out = **in
	}
	if in.IncludeReferenceToken != nil {
		in, out := &in.IncludeReferenceToken, &out.IncludeReferenceToken
		*out = new(bool)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Refreshable != nil {
		in, out := &in.Refreshable, &out.Refreshable
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenInitParameters.
func (in *ScopedTokenInitParameters) DeepCopy() *ScopedTokenInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenList) DeepCopyInto(out *ScopedTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScopedToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenList.
func (in *ScopedTokenList) DeepCopy() *ScopedTokenList {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScopedTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenObservation) DeepCopyInto(out *ScopedTokenObservation) {
	*out = *in
	if in.Audiences != nil {
		in, out := &in.Audiences, &out.Audiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpiresIn != nil {
		in, out := &in.ExpiresIn, &out.ExpiresIn
		*out = new(float64)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(float64)
		**out = **in
	}
	if in.GrantType != nil {
		in, out := &in.GrantType, &out.GrantType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingTokenWarning != nil {
		in, out := &in.IgnoreMissingTokenWarning, &out.IgnoreMissingTokenWarning
		*out = new(bool)
		**out = **in
	}
	if in.IncludeReferenceToken != nil {
		in, out := &in.IncludeReferenceToken, &out.IncludeReferenceToken
		*out = new(bool)
		**out = **in
	}
	if in.IssuedAt != nil {
		in, out := &in.IssuedAt, &out.IssuedAt
		*out = new(float64)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Refreshable != nil {
		in, out := &in.Refreshable, &out.Refreshable
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.TokenType != nil {
		in, out := &in.TokenType, &out.TokenType
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenObservation.
func (in *ScopedTokenObservation) DeepCopy() *ScopedTokenObservation {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenParameters) DeepCopyInto(out *ScopedTokenParameters) {
	*out = *in
	if in.Audiences != nil {
		in, out := &in.Audiences, &out.Audiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpiresIn != nil {
		in, out := &in.ExpiresIn, &out.ExpiresIn
		*out = new(float64)
		**out = **in
	}
	if in.GrantType != nil {
		in, out := &in.GrantType, &out.GrantType
		*out = new(string)
		**out = **in
	}
	if in.IgnoreMissingTokenWarning != nil {
		in, out := &in.IgnoreMissingTokenWarning, &out.IgnoreMissingTokenWarning
		*out = new(bool)
		**out = **in
	}
	if in.IncludeReferenceToken != nil {
		in, out := &in.IncludeReferenceToken, &out.IncludeReferenceToken
		*out = new(bool)
		**out = **in
	}
	if in.ProjectKey != nil {
		in, out := &in.ProjectKey, &out.ProjectKey
		*out = new(string)
		**out = **in
	}
	if in.Refreshable != nil {
		in, out := &in.Refreshable, &out.Refreshable
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenParameters.
func (in *ScopedTokenParameters) DeepCopy() *ScopedTokenParameters {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenSpec) DeepCopyInto(out *ScopedTokenSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenSpec.
func (in *ScopedTokenSpec) DeepCopy() *ScopedTokenSpec {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScopedTokenStatus) DeepCopyInto(out *ScopedTokenStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScopedTokenStatus.
func (in *ScopedTokenStatus) DeepCopy() *ScopedTokenStatus {
	if in == nil {
		return nil
	}
	out := new(ScopedTokenStatus)
	in.DeepCopyInto(out)
	return out
}
