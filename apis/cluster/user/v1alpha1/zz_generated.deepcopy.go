//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUser) DeepCopyInto(out *AnonymousUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUser.
func (in *AnonymousUser) DeepCopy() *AnonymousUser {
	if in == nil {
		return nil
	}
	out := new(AnonymousUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnonymousUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserInitParameters) DeepCopyInto(out *AnonymousUserInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserInitParameters.
func (in *AnonymousUserInitParameters) DeepCopy() *AnonymousUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserList) DeepCopyInto(out *AnonymousUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AnonymousUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserList.
func (in *AnonymousUserList) DeepCopy() *AnonymousUserList {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AnonymousUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserObservation) DeepCopyInto(out *AnonymousUserObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserObservation.
func (in *AnonymousUserObservation) DeepCopy() *AnonymousUserObservation {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserParameters) DeepCopyInto(out *AnonymousUserParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserParameters.
func (in *AnonymousUserParameters) DeepCopy() *AnonymousUserParameters {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserSpec) DeepCopyInto(out *AnonymousUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	out.ForProvider = in.ForProvider
	out.InitProvider = in.InitProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserSpec.
func (in *AnonymousUserSpec) DeepCopy() *AnonymousUserSpec {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnonymousUserStatus) DeepCopyInto(out *AnonymousUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnonymousUserStatus.
func (in *AnonymousUserStatus) DeepCopy() *AnonymousUserStatus {
	if in == nil {
		return nil
	}
	out := new(AnonymousUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyInitParameters) DeepCopyInto(out *PasswordPolicyInitParameters) {
	*out = *in
	if in.Digit != nil {
		in, out := &in.Digit, &out.Digit
		*out = new(float64)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Lowercase != nil {
		in, out := &in.Lowercase, &out.Lowercase
		*out = new(float64)
		**out = **in
	}
	if in.SpecialChar != nil {
		in, out := &in.SpecialChar, &out.SpecialChar
		*out = new(float64)
		**out = **in
	}
	if in.Uppercase != nil {
		in, out := &in.Uppercase, &out.Uppercase
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyInitParameters.
func (in *PasswordPolicyInitParameters) DeepCopy() *PasswordPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyObservation) DeepCopyInto(out *PasswordPolicyObservation) {
	*out = *in
	if in.Digit != nil {
		in, out := &in.Digit, &out.Digit
		*out = new(float64)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Lowercase != nil {
		in, out := &in.Lowercase, &out.Lowercase
		*out = new(float64)
		**out = **in
	}
	if in.SpecialChar != nil {
		in, out := &in.SpecialChar, &out.SpecialChar
		*out = new(float64)
		**out = **in
	}
	if in.Uppercase != nil {
		in, out := &in.Uppercase, &out.Uppercase
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyObservation.
func (in *PasswordPolicyObservation) DeepCopy() *PasswordPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordPolicyParameters) DeepCopyInto(out *PasswordPolicyParameters) {
	*out = *in
	if in.Digit != nil {
		in, out := &in.Digit, &out.Digit
		*out = new(float64)
		**out = **in
	}
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.Lowercase != nil {
		in, out := &in.Lowercase, &out.Lowercase
		*out = new(float64)
		**out = **in
	}
	if in.SpecialChar != nil {
		in, out := &in.SpecialChar, &out.SpecialChar
		*out = new(float64)
		**out = **in
	}
	if in.Uppercase != nil {
		in, out := &in.Uppercase, &out.Uppercase
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordPolicyParameters.
func (in *PasswordPolicyParameters) DeepCopy() *PasswordPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DisableUIAccess != nil {
		in, out := &in.DisableUIAccess, &out.DisableUIAccess
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InternalPasswordDisabled != nil {
		in, out := &in.InternalPasswordDisabled, &out.InternalPasswordDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(PasswordPolicyInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ProfileUpdatable != nil {
		in, out := &in.ProfileUpdatable, &out.ProfileUpdatable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DisableUIAccess != nil {
		in, out := &in.DisableUIAccess, &out.DisableUIAccess
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalPasswordDisabled != nil {
		in, out := &in.InternalPasswordDisabled, &out.InternalPasswordDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(PasswordPolicyObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.ProfileUpdatable != nil {
		in, out := &in.ProfileUpdatable, &out.ProfileUpdatable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DisableUIAccess != nil {
		in, out := &in.DisableUIAccess, &out.DisableUIAccess
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InternalPasswordDisabled != nil {
		in, out := &in.InternalPasswordDisabled, &out.InternalPasswordDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(PasswordPolicyParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ProfileUpdatable != nil {
		in, out := &in.ProfileUpdatable, &out.ProfileUpdatable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}
