// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NugetRepositoryInitParameters struct {

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `json:"archiveBrowsingEnabled,omitempty" tf:"archive_browsing_enabled,omitempty"`

	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut *bool `json:"blackedOut,omitempty" tf:"blacked_out,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `json:"cdnRedirect,omitempty" tf:"cdn_redirect,omitempty"`

	// Public description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect *bool `json:"downloadDirect,omitempty" tf:"download_direct,omitempty"`

	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern *string `json:"excludesPattern,omitempty" tf:"excludes_pattern,omitempty"`

	// Force basic authentication credentials in order to use this repository.
	ForceNugetAuthentication *bool `json:"forceNugetAuthentication,omitempty" tf:"force_nuget_authentication,omitempty"`

	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `json:"includesPattern,omitempty" tf:"includes_pattern,omitempty"`

	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *float64 `json:"maxUniqueSnapshots,omitempty" tf:"max_unique_snapshots,omitempty"`

	// Internal description.
	Notes *string `json:"notes,omitempty" tf:"notes,omitempty"`

	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `json:"priorityResolution,omitempty" tf:"priority_resolution,omitempty"`

	// Before Artifactory 7.53.1, up to 2 values (`DEV` and `PROD`) are allowed. From 7.53.1 to 7.107.1, only one value is allowed. From 7.107.1, multiple values are allowed.The attribute should only be used if the repository is already assigned to the existing project.
	// +listType=set
	ProjectEnvironments []*string `json:"projectEnvironments,omitempty" tf:"project_environments,omitempty"`

	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// List of property set name
	// +listType=set
	PropertySets []*string `json:"propertySets,omitempty" tf:"property_sets,omitempty"`

	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `json:"repoLayoutRef,omitempty" tf:"repo_layout_ref,omitempty"`

	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `json:"xrayIndex,omitempty" tf:"xray_index,omitempty"`
}

type NugetRepositoryObservation struct {

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	ArchiveBrowsingEnabled *bool `json:"archiveBrowsingEnabled,omitempty" tf:"archive_browsing_enabled,omitempty"`

	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	BlackedOut *bool `json:"blackedOut,omitempty" tf:"blacked_out,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	CdnRedirect *bool `json:"cdnRedirect,omitempty" tf:"cdn_redirect,omitempty"`

	// Public description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	DownloadDirect *bool `json:"downloadDirect,omitempty" tf:"download_direct,omitempty"`

	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	ExcludesPattern *string `json:"excludesPattern,omitempty" tf:"excludes_pattern,omitempty"`

	// Force basic authentication credentials in order to use this repository.
	ForceNugetAuthentication *bool `json:"forceNugetAuthentication,omitempty" tf:"force_nuget_authentication,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	IncludesPattern *string `json:"includesPattern,omitempty" tf:"includes_pattern,omitempty"`

	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	MaxUniqueSnapshots *float64 `json:"maxUniqueSnapshots,omitempty" tf:"max_unique_snapshots,omitempty"`

	// Internal description.
	Notes *string `json:"notes,omitempty" tf:"notes,omitempty"`

	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	PriorityResolution *bool `json:"priorityResolution,omitempty" tf:"priority_resolution,omitempty"`

	// Before Artifactory 7.53.1, up to 2 values (`DEV` and `PROD`) are allowed. From 7.53.1 to 7.107.1, only one value is allowed. From 7.107.1, multiple values are allowed.The attribute should only be used if the repository is already assigned to the existing project.
	// +listType=set
	ProjectEnvironments []*string `json:"projectEnvironments,omitempty" tf:"project_environments,omitempty"`

	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// List of property set name
	// +listType=set
	PropertySets []*string `json:"propertySets,omitempty" tf:"property_sets,omitempty"`

	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	RepoLayoutRef *string `json:"repoLayoutRef,omitempty" tf:"repo_layout_ref,omitempty"`

	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	XrayIndex *bool `json:"xrayIndex,omitempty" tf:"xray_index,omitempty"`
}

type NugetRepositoryParameters struct {

	// When set, you may view content such as HTML or Javadoc files directly from Artifactory.
	// This may not be safe and therefore requires strict content moderation to prevent malicious users from uploading content that may compromise security (e.g., cross-site scripting attacks).
	// +kubebuilder:validation:Optional
	ArchiveBrowsingEnabled *bool `json:"archiveBrowsingEnabled,omitempty" tf:"archive_browsing_enabled,omitempty"`

	// When set, the repository does not participate in artifact resolution and new artifacts cannot be deployed.
	// +kubebuilder:validation:Optional
	BlackedOut *bool `json:"blackedOut,omitempty" tf:"blacked_out,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from AWS CloudFront. Available in Enterprise+ and Edge licenses only. Default value is 'false'
	// +kubebuilder:validation:Optional
	CdnRedirect *bool `json:"cdnRedirect,omitempty" tf:"cdn_redirect,omitempty"`

	// Public description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// When set, download requests to this repository will redirect the client to download the artifact directly from the cloud storage provider. Available in Enterprise+ and Edge licenses only.
	// +kubebuilder:validation:Optional
	DownloadDirect *bool `json:"downloadDirect,omitempty" tf:"download_direct,omitempty"`

	// List of artifact patterns to exclude when evaluating artifact requests, in the form of `x/y/**/z/*`.By default no artifacts are excluded.
	// +kubebuilder:validation:Optional
	ExcludesPattern *string `json:"excludesPattern,omitempty" tf:"excludes_pattern,omitempty"`

	// Force basic authentication credentials in order to use this repository.
	// +kubebuilder:validation:Optional
	ForceNugetAuthentication *bool `json:"forceNugetAuthentication,omitempty" tf:"force_nuget_authentication,omitempty"`

	// List of comma-separated artifact patterns to include when evaluating artifact requests in the form of `x/y/**/z/*`. When used, only artifacts matching one of the include patterns are served. By default, all artifacts are included (`**/*`).
	// +kubebuilder:validation:Optional
	IncludesPattern *string `json:"includesPattern,omitempty" tf:"includes_pattern,omitempty"`

	// The maximum number of unique snapshots of a single artifact to store. Once the number of snapshots exceeds this setting, older versions are removed. A value of 0 (default) indicates there is no limit, and unique snapshots are not cleaned up.
	// +kubebuilder:validation:Optional
	MaxUniqueSnapshots *float64 `json:"maxUniqueSnapshots,omitempty" tf:"max_unique_snapshots,omitempty"`

	// Internal description.
	// +kubebuilder:validation:Optional
	Notes *string `json:"notes,omitempty" tf:"notes,omitempty"`

	// Setting repositories with priority will cause metadata to be merged only from repositories set with this field
	// +kubebuilder:validation:Optional
	PriorityResolution *bool `json:"priorityResolution,omitempty" tf:"priority_resolution,omitempty"`

	// Before Artifactory 7.53.1, up to 2 values (`DEV` and `PROD`) are allowed. From 7.53.1 to 7.107.1, only one value is allowed. From 7.107.1, multiple values are allowed.The attribute should only be used if the repository is already assigned to the existing project.
	// +kubebuilder:validation:Optional
	// +listType=set
	ProjectEnvironments []*string `json:"projectEnvironments,omitempty" tf:"project_environments,omitempty"`

	// Project key for assigning this repository to. Must be 2 - 32 lowercase alphanumeric and hyphen characters. When assigning repository to a project, repository key must be prefixed with project key, separated by a dash.
	// +kubebuilder:validation:Optional
	ProjectKey *string `json:"projectKey,omitempty" tf:"project_key,omitempty"`

	// List of property set name
	// +kubebuilder:validation:Optional
	// +listType=set
	PropertySets []*string `json:"propertySets,omitempty" tf:"property_sets,omitempty"`

	// Sets the layout that the repository should use for storing and identifying modules. A recommended layout that corresponds to the package type defined is suggested, and index packages uploaded and calculate metadata accordingly.
	// +kubebuilder:validation:Optional
	RepoLayoutRef *string `json:"repoLayoutRef,omitempty" tf:"repo_layout_ref,omitempty"`

	// Enable Indexing In Xray. Repository will be indexed with the default retention period. You will be able to change it via Xray settings.
	// +kubebuilder:validation:Optional
	XrayIndex *bool `json:"xrayIndex,omitempty" tf:"xray_index,omitempty"`
}

// NugetRepositorySpec defines the desired state of NugetRepository
type NugetRepositorySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NugetRepositoryParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NugetRepositoryInitParameters `json:"initProvider,omitempty"`
}

// NugetRepositoryStatus defines the observed state of NugetRepository.
type NugetRepositoryStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NugetRepositoryObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NugetRepository is the Schema for the NugetRepositorys API. <no value>
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,artifactory}
type NugetRepository struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NugetRepositorySpec   `json:"spec"`
	Status            NugetRepositoryStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NugetRepositoryList contains a list of NugetRepositorys
type NugetRepositoryList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NugetRepository `json:"items"`
}

// Repository type metadata.
var (
	NugetRepository_Kind             = "NugetRepository"
	NugetRepository_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NugetRepository_Kind}.String()
	NugetRepository_KindAPIVersion   = NugetRepository_Kind + "." + CRDGroupVersion.String()
	NugetRepository_GroupVersionKind = CRDGroupVersion.WithKind(NugetRepository_Kind)
)

func init() {
	SchemeBuilder.Register(&NugetRepository{}, &NugetRepositoryList{})
}
